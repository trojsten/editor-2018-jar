# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-04-08 22:01
from __future__ import unicode_literals

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=1, unique=True)),
                ('title', models.CharField(max_length=128)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
            ],
        ),
        migrations.CreateModel(
            name='Row',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=1)),
                ('lang', models.IntegerField(choices=[(1, 'C++'), (2, 'Python'), (3, 'FreePascal'), (4, 'Go'), (5, 'PHP'), (6, 'Rust'), (7, 'Perl'), (8, 'R')])),
                ('content', models.CharField(blank=True, default='', max_length=80)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submit.Problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SpareRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.IntegerField(choices=[(1, 'C++'), (2, 'Python'), (3, 'FreePascal'), (4, 'Go'), (5, 'PHP'), (6, 'Rust'), (7, 'Perl'), (8, 'R')])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubmitOutput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('Manual review', (('Reviewed', 'Reviewed'),)), ('Judge test results', [('WA', 'Wrong answer'), ('CERR', 'Compilation error'), ('IGN', 'Ignored'), ('EXC', 'Runtime exception'), ('OK', 'OK'), ('SEC', 'Security exception'), ('TLE', 'Time limit exceeded'), ('DONE', 'Done')]), ('Judge communication', [('Judge unavailable', 'Judge unavailable'), ('Sending to judge', 'Sending to judge'), ('Sent to judge', 'Sent to judge'), ('Protocol corrupted', 'Protocol corrupted')])], max_length=128)),
                ('score', models.IntegerField()),
                ('custom', models.BooleanField(default=False)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submit.Problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField()),
                ('solved', models.BooleanField(default=False)),
                ('custom_input', models.TextField(blank=True, default='')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submit.Problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='task',
            unique_together=set([('user', 'problem')]),
        ),
        migrations.AlterUniqueTogether(
            name='row',
            unique_together=set([('user', 'problem', 'order')]),
        ),
    ]
