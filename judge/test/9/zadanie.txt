N lodí obkrúžilo náš ostrov. i-ta loď susedí v tomto kruhu s i+1-ou, a N-tá loď susedí s prvou.
i-ta loď obsahuje a_i nepriateľských bojovníkov. Musíme zobrať našu armádu, začať nejakou loďou, a potom ísť dokola po pobreží a útočiť na všetky lode jednu za druhou.

Niet dosť času, aby sme si zvolili optimálnu stratégiu. Narýchlo zvolíme aspoň akú-takú stratégiu na minimalizovanie strát: povedzme, že počet bojovníkov na lodiach ktoré porazíme je postupne b_1, b_2,...,b_N. Chceme, aby zo všetkých možných poradí v ktorom lode môžeme poraziť, bol tento lexikografický najmenší - teda ak zoberieme ľubovoľné iné poradie c_1,...,c_N a nájdeme prvé i také že b_i sa nerovná c_i, tak b_i < c_i. Nájdite, v akom poradí máme lode poraziť!

Input:
VECTOR<INT> lode: permutácia čísel 1 až N, N <= 100: počty bojovníkov v jednotlivých lodiach.
lode[i] susedí s lode[i+1] pre všetky zmysluplné i, a posledná loď susedí s prvou (tvoria kruh). 
INT nepouzijestentointnadarmo: pomocná premenná. Nepoužite ju nadarmo.

Output:
VECTOR<INT> lode: lexikograficky najmenšie poradie lodí, v ktorom ich môžeme poraziť
(inak povedané, lexikograficky najmenší zápis rovnakého kruhu)

